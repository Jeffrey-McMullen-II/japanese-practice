{"remainingRequest":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/primevue/paginator/Paginator.vue?vue&type=style&index=0&id=5d06adec&lang=css","dependencies":[{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/primevue/paginator/Paginator.vue","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wLXBhZ2luYXRvciB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgZmxleC13cmFwOiB3cmFwOwp9CgoucC1wYWdpbmF0b3ItbGVmdC1jb250ZW50IHsKCW1hcmdpbi1yaWdodDogYXV0bzsKfQoKLnAtcGFnaW5hdG9yLXJpZ2h0LWNvbnRlbnQgewoJbWFyZ2luLWxlZnQ6IGF1dG87Cn0KCi5wLXBhZ2luYXRvci1wYWdlLAoucC1wYWdpbmF0b3ItbmV4dCwKLnAtcGFnaW5hdG9yLWxhc3QsCi5wLXBhZ2luYXRvci1maXJzdCwKLnAtcGFnaW5hdG9yLXByZXYsCi5wLXBhZ2luYXRvci1jdXJyZW50IHsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGRpc3BsYXk6IGlubGluZS1mbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgbGluZS1oZWlnaHQ6IDE7CiAgICB1c2VyLXNlbGVjdDogbm9uZTsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5wLXBhZ2luYXRvci1lbGVtZW50OmZvY3VzIHsKICAgIHotaW5kZXg6IDE7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0K"},{"version":3,"sources":["/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/primevue/paginator/Paginator.vue"],"names":[],"mappings":"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","file":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/crud-app-front-end-vue/node_modules/primevue/paginator/Paginator.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div class=\"p-paginator p-component\" v-if=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\n        <div class=\"p-paginator-left-content\" v-if=\"$slots.left\">\n            <slot name=\"left\" :state=\"currentState\"></slot>\n        </div>\n\t\t<template v-for=\"item of templateItems\" :key=\"item\">\n\t\t\t<FirstPageLink v-if=\"item === 'FirstPageLink'\" @click=\"changePageToFirst($event)\" :disabled=\"isFirstPage\" />\n\t\t\t<PrevPageLink v-else-if=\"item === 'PrevPageLink'\" @click=\"changePageToPrev($event)\" :disabled=\"isFirstPage\" />\n\t\t\t<NextPageLink v-else-if=\"item === 'NextPageLink'\" @click=\"changePageToNext($event)\" :disabled=\"isLastPage\" />\n\t\t\t<LastPageLink v-else-if=\"item === 'LastPageLink'\" @click=\"changePageToLast($event)\" :disabled=\"isLastPage\" />\n\t\t\t<PageLinks v-else-if=\"item === 'PageLinks'\" :value=\"pageLinks\" :page=\"page\" @click=\"changePageLink($event)\" />\n\t\t\t<CurrentPageReport v-else-if=\"item === 'CurrentPageReport'\" :template=\"currentPageReportTemplate\"\n                :page=\"page\" :pageCount=\"pageCount\" :first=\"d_first\" :rows=\"d_rows\" :totalRecords=\"totalRecords\" />\n\t\t\t<RowsPerPageDropdown v-else-if=\"item === 'RowsPerPageDropdown' && rowsPerPageOptions\" :rows=\"d_rows\"\n                :options=\"rowsPerPageOptions\" @rows-change=\"onRowChange($event)\" />\n        </template>\n        <div class=\"p-paginator-right-content\" v-if=\"$slots.right\">\n            <slot name=\"right\" :state=\"currentState\"></slot>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport CurrrentPageReport from './CurrentPageReport';\nimport FirstPageLink from './FirstPageLink';\nimport LastPageLink from './LastPageLink';\nimport NextPageLink from './NextPageLink';\nimport PageLinks from './PageLinks';\nimport PrevPageLink from './PrevPageLink';\nimport RowsPerPageDropdown from './RowsPerPageDropdown';\n\nexport default {\n    emits: ['update:first', 'update:rows', 'page'],\n    props: {\n        totalRecords: {\n            type: Number,\n            default: 0\n        },\n        rows: {\n            type: Number,\n            default: 0\n        },\n        first: {\n            type: Number,\n            default: 0\n        },\n        pageLinkSize: {\n            type: Number,\n            default: 5\n        },\n        rowsPerPageOptions: {\n            type: Array,\n            default: null\n        },\n        template: {\n            type: String,\n            default: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'\n        },\n        currentPageReportTemplate: {\n            type: null,\n            default: '({currentPage} of {totalPages})'\n        },\n        alwaysShow: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            d_first: this.first,\n            d_rows: this.rows\n        }\n    },\n    watch: {\n        first(newValue) {\n            this.d_first = newValue;\n        },\n        rows(newValue) {\n            this.d_rows = newValue;\n        },\n        totalRecords(newValue) {\n            if (this.page > 0 && newValue && (this.d_first >= newValue)) {\n                this.changePage(this.pageCount - 1);\n            }\n        }\n    },\n    methods: {\n        changePage(p) {\n            const pc = this.pageCount;\n\n            if (p >= 0 && p < pc) {\n                this.d_first = this.d_rows * p;\n                const state = {\n                    page: p,\n                    first: this.d_first,\n                    rows: this.d_rows,\n                    pageCount: pc\n                };\n\n\t\t\t\tthis.$emit('update:first', this.d_first);\n                this.$emit('update:rows', this.d_rows);\n                this.$emit('page', state);\n            }\n        },\n        changePageToFirst(event) {\n            if(!this.isFirstPage) {\n                this.changePage(0);\n            }\n\n            event.preventDefault();\n        },\n        changePageToPrev(event) {\n            this.changePage(this.page - 1);\n            event.preventDefault();\n        },\n        changePageLink(event) {\n            this.changePage(event.value - 1);\n            event.originalEvent.preventDefault();\n        },\n        changePageToNext(event) {\n            this.changePage(this.page  + 1);\n            event.preventDefault();\n        },\n        changePageToLast(event) {\n            if(!this.isLastPage) {\n                this.changePage(this.pageCount - 1);\n            }\n\n            event.preventDefault();\n        },\n        onRowChange(value) {\n            this.d_rows = value;\n            this.changePage(this.page);\n        }\n    },\n    computed: {\n        templateItems() {\n            let keys = [];\n            this.template.split(' ').map((value) => {\n                keys.push(value.trim());\n            })\n            return keys;\n        },\n        page() {\n            return Math.floor(this.d_first / this.d_rows);\n        },\n        pageCount() {\n            return Math.ceil(this.totalRecords / this.d_rows) || 1;\n        },\n        isFirstPage() {\n            return this.page === 0;\n        },\n        isLastPage() {\n            return this.page === this.pageCount - 1;\n        },\n        calculatePageLinkBoundaries() {\n            const numberOfPages = this.pageCount;\n            const visiblePages = Math.min(this.pageLinkSize, numberOfPages);\n\n            //calculate range, keep current in middle if necessary\n            let start = Math.max(0, Math.ceil(this.page - ((visiblePages) / 2)));\n            let end = Math.min(numberOfPages - 1, start + visiblePages - 1);\n\n            //check when approaching to last page\n            const delta = this.pageLinkSize - (end - start + 1);\n            start = Math.max(0, start - delta);\n\n            return [start, end];\n        },\n        pageLinks() {\n            let pageLinks = [];\n            let boundaries = this.calculatePageLinkBoundaries;\n            let start = boundaries[0];\n            let end = boundaries[1];\n\n            for(var i = start; i <= end; i++) {\n                pageLinks.push(i + 1);\n            }\n\n            return pageLinks;\n        },\n        currentState() {\n            return {\n                page: this.page,\n                first: this.d_first,\n                rows: this.d_rows\n            }\n        }\n    },\n    components: {\n        'CurrentPageReport': CurrrentPageReport,\n        'FirstPageLink': FirstPageLink,\n        'LastPageLink': LastPageLink,\n        'NextPageLink': NextPageLink,\n        'PageLinks': PageLinks,\n        'PrevPageLink': PrevPageLink,\n        'RowsPerPageDropdown': RowsPerPageDropdown,\n    },\n}\n</script>\n\n<style lang=\"css\">\n.p-paginator {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n\n.p-paginator-left-content {\n\tmargin-right: auto;\n}\n\n.p-paginator-right-content {\n\tmargin-left: auto;\n}\n\n.p-paginator-page,\n.p-paginator-next,\n.p-paginator-last,\n.p-paginator-first,\n.p-paginator-prev,\n.p-paginator-current {\n    cursor: pointer;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    line-height: 1;\n    user-select: none;\n    overflow: hidden;\n    position: relative;\n}\n\n.p-paginator-element:focus {\n    z-index: 1;\n    position: relative;\n}\n</style>"]}]}