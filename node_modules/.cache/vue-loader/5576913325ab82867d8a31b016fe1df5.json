{"remainingRequest":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/primevue/paginator/CurrentPageReport.vue?vue&type=template&id=1eccf47d","dependencies":[{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/primevue/paginator/CurrentPageReport.vue","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cgk8c3BhbiBjbGFzcz0icC1wYWdpbmF0b3ItY3VycmVudCI+e3t0ZXh0fX08L3NwYW4+Cg=="},{"version":3,"sources":["/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/primevue/paginator/CurrentPageReport.vue"],"names":[],"mappings":";CACC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/jeffrey/Development/SoftwareDevelopment/Typescript/gallery/node_modules/primevue/paginator/CurrentPageReport.vue","sourceRoot":"","sourcesContent":["<template>\n\t<span class=\"p-paginator-current\">{{text}}</span>\n</template>\n<script>\n\texport default {\n\t\tinheritAttrs: false,\n\t\tprops: {\n\t\t\tpageCount: {\n                type: Number,\n                default: 0\n            },\n            page: {\n                type: Number,\n                default: 0\n            },\n            first: {\n                type: Number,\n                default: 0\n            },\n            rows: {\n                type: Number,\n                default: 0\n            },\n            totalRecords: {\n                type: Number,\n                default: 0\n            },\n\t\t\ttemplate: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: '({currentPage} of {totalPages})'\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n            text() {\n                let text = this.template\n                    .replace(\"{currentPage}\", this.page + 1)\n                    .replace(\"{totalPages}\", this.pageCount)\n                    .replace(\"{first}\", this.first + 1)\n                    .replace(\"{last}\", Math.min(this.first + this.rows, this.totalRecords))\n                    .replace(\"{rows}\", this.rows)\n                    .replace(\"{totalRecords}\", this.totalRecords);\n\n                return text;\n            }\n\t\t}\n\t}\n</script>"]}]}